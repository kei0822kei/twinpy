#!/usr/bin/env python
# -*- coding: utf-8 -*-

"""
make structures
"""

import numpy as np
import yaml
try:
    from yaml import CLoader as Loader, CDumper as Dumper
except ImportError:
    from yaml import Loader, Dumper

epsilon = 1e-8


def write_poscar(
        cell:tuple,
        filename:str='POSCAR'):
    """
    Write out structure to file.
    In this function, structure is not fixed
    even if its lattice basis is left handed.

    Args:
        cell (tuple): cell
        filename (str): poscar filename
    """
    lattice, scaled_positions, symbols = cell
    symbol_sets = list(set(symbols))
    nums = []
    idx = []
    for symbol in symbol_sets:
        index = [ i for i, s in enumerate(symbols) if s == symbol ]
        nums.append(str(len(index)))
        idx.extend(index)
    positions = np.round(np.array(scaled_positions)[idx, :],
                         decimals=9).astype(str)

    # create strings
    strings = ''
    strings += 'generated by twinpy\n'
    strings += '1.0\n'
    for i in range(3):
        strings += ' '.join(list(np.round(
            lattice[i], decimals=9).astype(str))) + '\n'
    strings += ' '.join(symbol_sets) + '\n'
    strings += ' '.join(nums) + '\n'
    strings += 'Direct\n'
    for position in positions:
        strings += ' '.join(list(position)) + '\n'
    print("export filename:")
    print("    %s" % filename)

    with open(filename, 'w') as f:
        f.write(strings)


def write_yaml(dic:dict, filename:str):
    """
    Write yaml file from dic.

    Args:
        dic (dict): dictionary
        filename (str): output file name
    """
    with open(filename, 'w') as f:
        yaml.dump(dic, f, indent=4, default_flow_style=False, Dumper=Dumper)


def read_yaml(filename:str):
    """
    Return dic from yaml.

    Args:
        filename (str): output file name

    Returns:
        dict: dictionary object
    """
    with open(filename, 'w') as f:
        dic = yaml.load(f, Loader=Loader)
    return dic
